Given the head of a singly linked list, return true if it is a palindrome.

 

Example 1:


Input: head = [1,2,2,1]
Output: true
Example 2:


Input: head = [1,2]
Output: false

SOLUTION:

class Solution {
    
    ListNode reverseList(ListNode start){
        
        ListNode prev = start;
        ListNode curr = start.next;
        ListNode temp = null;
        while(curr!=null){
            temp =curr.next;
            curr.next = prev;
            prev = curr;
            curr = temp;
        }
        return prev; 
    }
    public boolean isPalindrome(ListNode head) {
        ListNode fast = head;
        ListNode slow = head;
        
        while(fast.next!=null && fast.next.next!=null){
            slow = slow.next;
            fast = fast.next.next;
        }
      fast = reverseList(slow);
        ListNode temp = head;
        while(fast!=slow){
            if(fast.val!=temp.val)
                return false;
            temp = temp.next;   
            fast=fast.next;
            }
        return true;
    }
    
}
