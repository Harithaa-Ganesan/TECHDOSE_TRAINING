Given a string s, find the first non-repeating character in it and return its index. If it does not exist, return -1.

 

Example 1:

Input: s = "leetcode"
Output: 0
Example 2:

Input: s = "loveleetcode"
Output: 2
Example 3:

Input: s = "aabb"
Output: -1

SOLUTION:

class Solution {
    public int firstUniqChar(String s) {        
         int index=-1;
        Map<Character,Integer> mapS = new TreeMap<>();
        for (int i = 0; i < s.length(); i++) {
            Character c = s.charAt(i);
            Integer value = mapS.get(c);
            if(value !=null){
                mapS.put(c,value+1);
            }
            else
                mapS.put(c,1);
        }
        for (int i = 0; i < s.length(); i++) {
            if(mapS.get(s.charAt(i)).equals(1)){
                index=i;
                break;
            }
        }
        return index;
    }
}
