Given a string s containing just the characters '(', ')', '{', '}', '[' and ']', determine if the input string is valid.

An input string is valid if:

Open brackets must be closed by the same type of brackets.
Open brackets must be closed in the correct order.
 

Example 1:

Input: s = "()"
Output: true
Example 2:

Input: s = "()[]{}"
Output: true
Example 3:

Input: s = "(]"
Output: false
Example 4:

Input: s = "([)]"
Output: false
Example 5:

Input: s = "{[]}"
Output: true
 
 SOLUTION:
 
 class Solution {

public boolean isValid(String s) {
    Stack<Character> ch = new Stack<>();
    for(int i = 0; i < s.length(); i++){
        char x = s.charAt(i);
        if (x == '(' || x == '[' || x == '{'){
            ch.push(x);
        }
        if(ch.isEmpty())
            return false;
        
        char check;
        
        switch(x){
            case ')':
                check = ch.pop();
                if(check == '{' || check == '[')
                    return false;
                break;
            case '}':
                check = ch.pop();
                if(check == '(' || check == '[')
                    return false;
                break;
            case ']':
                check = ch.pop();
                if(check == '(' || check == '{')
                    return false;
                break;
        }
    }
    
    return(ch.isEmpty());
}
}

